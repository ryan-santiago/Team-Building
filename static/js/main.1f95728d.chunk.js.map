{"version":3,"sources":["utils/questions.ts","App.tsx","index.tsx"],"names":["questions","code","title","description","answer","reward","App","_useState","useState","_useState2","_slicedToArray","setCode","_useState3","_useState4","questionId","setQuestionId","_useState5","_useState6","setAnswer","_useState7","_useState8","setAnswers","_useState9","_useState10","setReward","_useState11","_useState12","screen","setScreen","_useState13","_useState14","error","setError","useEffect","timer","setInterval","Date","now","clearInterval","question","reset","errorMessage","React","createElement","Alert","variant","Container","style","marginTop","Row","Col","lg","span","offset","sm","Card","Body","Title","Form","onSubmit","event","preventDefault","findIndex","item","toLowerCase","Group","controlId","className","Label","Control","type","placeholder","value","onChange","target","Button","isCorrect","prev","concat","_toConsumableArray","_objectSpread","time","as","rows","onClick","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1f95728d.chunk.js","sourcesContent":["const questions = [\n    // BLUE QUESTIONS\n    {\n        code: \"QNX@2023@BLUE\",\n        title: \"Team Blue Question #1 - Exploring Letter Substitution and Binary Conversion\",\n        description: `Use \"Letter Substitution\" to compute the word QUESTRONIX Then Let's take this decimal for a ride on the binary express!`,\n        answer: \"10100010\",\n        reward: \"0\",\n    },\n    {\n        code: \"SCF@2023@BLUE\",\n        title: \"Team Blue Question #2 - Find the word\",\n        description: \"What elusive goal did Questronix triumphantly snatch in 1987? It's hidden within the depths of the Questronix website, waiting to be discovered by the curious and determined.\",\n        answer: \"THE INCEPTION\",\n        reward: \"0\",\n    },\n    {\n        code: \"TEAM BLUE\",\n        title: \"Team Blue Question #3 - Caesar Cipher\",\n        description: `\"GEQEVEHIVMI\" - Shift is in 1 - 5. That's absolute :)`,\n        answer: \"CAMARADERIE\",\n        reward: \"0\",\n    },\n    {\n        code: \"ORANGE\",\n        title: \"Team Blue Question #4 - phlbrie kcco\",\n        description: `\"SRGLHVE HEOAIEN ADACEMT\" - Re-arrange the title to identify the cipher. It's not none, inline or flex`,\n        answer: \"SHARED GOAL ACHIEVEMENT\",\n        reward: \"0\",\n    },\n    {\n        code: \"FINAL CODE\",\n        title: \"Team Blue Question #5 - Morse Code :)\",\n        description: `\".. - ... / -. --- - / - .... . / .- -. ... .-- . .-.\" - Unlocking the treasure trove isn't exactly rocket science - all it takes is a few taps of your fingers and the Final Code. It sounds simple, but beware - this digital labyrinth may have more surprises in store than you think.`,\n        answer: \"FINAL CODE\",\n        reward: \"CONGRATULATIONS <3\",\n    },\n    //ORANGE QUESTIONS\n    {\n        code: \"QNX@2023@ORANGE\",\n        title: `Team Orange Question #1 - Letter Substitution and Binary Conversion`,\n        description: `Use \"Letter Substitution\" to compute the word QUESTRONIX, Then Let's give this number a binary makeover and watch it go from decimal to dazzling!`,\n        answer: \"10100010\",\n        reward: \"0\",\n    },\n    {\n        code: \"SCF@2023@ORANGE\",\n        title: \"Team Orange Question #2 - Caesar Cipher\",\n        description: \"What grand achievement did Questronix unlock in 2000? It's a mystery that lies within the depths of the Questronix website - a treasure worth seeking, but not one that gives itself up easily.\",\n        answer: \"SYSTEM INTEGRATOR\",\n        reward: \"0\",\n    },\n    {\n        code: \"TEAM ORANGE\",\n        title: \"Team Orange Question #3 - Find the word\",\n        description: `\"PKCAPDANJAO\" Shift is in 1 - 5. Well that's negative`,\n        answer: \"TOGETHERNESS\",\n        reward: \"0\",\n    },\n    {\n        code: \"BLUE\",\n        title: \"Team Orange Question #4 - phlbrie kcco\",\n        description: `\"GUOIAITS RPNNCVI OBDGTIE\" - Re-arrange the title to identify the cipher. It's not none, inline or flex`,\n        answer: \"GROUP BONDING ACTIVITIES\",\n        reward: \"0\",\n    },\n    {\n        code: \"LAST CODE\",\n        title: \"Team Orange Question #5 - Morse Code :)\",\n        description: `\"- .... .. ... / .. ... / -. --- - / - .... . / .- -. ... .-- . .-.\" - Well, it's not rocket science - just a few taps of your fingers and the Last Code will unlock the treasure trove. A cinch, really. But don't let that fool you, there's more than meets the eye to this digital labyrinth. `,\n        answer: \"LAST CODE\",\n        reward: \"CONGRATULATIONS <3\",\n    },\n    //Test Code\n    {\n        code: \"TEST CODE\",\n        title: \"Default #1 - Introduction :)\",\n        description: `Welcome to the Scavenger Hunt game! This exciting adventure will take you on a journey to search for hidden clues, solve puzzles, and complete challenges to ultimately uncover the ultimate prize. You'll need to put your detective skills to the test as you explore different locations and piece together the clues to progress through the game. Whether you're playing alone or with a team, get ready for a thrilling and unforgettable experience. Good luck and let the hunt begin!`,\n        answer: \"TEST\",\n        reward: \"355\",\n    },\n  ];\n// const questions = [\n// {\n//     code: \"QNX@2023@BLUE\",\n//     title: \"Team Blue Question #1 - Exploring Letter Substitution and Binary Conversion\",\n//     description: `Use \"Letter Substitution\" to compute the word QUESTRONIX Then Let's take this decimal for a ride on the binary express!`,\n//     answer: \"10100010\",\n//     reward: \"121\",\n// },\n// {\n//     code: \"UNITY\",\n//     title: \"Team Blue Question #2 - Caesar Cipher\",\n//     description: `\"GEQEVEHIVMI\" - Shift is in 1 - 5. That's absolute :)`,\n//     answer: \"CAMARADERIE\",\n//     reward: \"150\",\n// },\n// {\n//     code: \"TEAM BLUE\",\n//     title: \"Team Blue Question #3 - Find the word\",\n//     description: \"What elusive goal did Questronix triumphantly snatch in 1987? It's hidden within the depths of the Questronix website, waiting to be discovered by the curious and determined.\",\n//     answer: \"THE INCEPTION\",\n//     reward: \"106\",\n// },\n// {\n//     code: \"TALI BEACH\",\n//     title: \"Team Blue Question #4 - phlbrie kcco\",\n//     description: `\"GUOIAITS RPNNCVI OBDGTIE\" - Re-arrange the title to identify the cipher. It's not none, inline or flex`,\n//     answer: \"GROUP BONDING ACTIVITIES\",\n//     reward: \"332\",\n// },\n// {\n//     code: \"FINAL CODE\",\n//     title: \"Team Blue Question #5 - Morse Code :)\",\n//     description: `\".. - ... / -. --- - / - .... . / .- -. ... .-- . .-.\" - Unlocking the treasure trove isn't exactly rocket science - all it takes is a few taps of your fingers and the Final Code. It sounds simple, but beware - this digital labyrinth may have more surprises in store than you think.`,\n//     answer: \"FINAL CODE\",\n//     reward: \"CONGRATULATIONS <3\",\n// },\n// {\n//     code: \"QNX@2023@ORANGE\",\n//     title: `Team Orange Question #1 - Letter Substitution and Binary Conversion`,\n//     description: `Use \"Letter Substitution\" to compute the word QUESTRONIX, Then Let's give this number a binary makeover and watch it go from decimal to dazzling!`,\n//     answer: \"10100010\",\n//     reward: \"170\",\n// },\n// {\n//     code: \"COLLABORATION\",\n//     title: \"Team Orange Question #2 - Caesar Cipher\",\n//     description: `\"PKCAPDANJAO\" Shift is in 1 - 5. Well that's negative`,\n//     answer: \"TOGETHERNESS\",\n//     reward: \"2\",\n// },\n// {\n//     code: \"TEAM ORANGE\",\n//     title: \"Team Orange Question #3 - Find the word\",\n//     description: \"What grand achievement did Questronix unlock in 2000? It's a mystery that lies within the depths of the Questronix website - a treasure worth seeking, but not one that gives itself up easily.\",\n//     answer: \"SYSTEM INTEGRATOR\",\n//     reward: \"137\",\n// },\n// {\n//     code: \"BATANGAS\",\n//     title: \"Team Orange Question #4 - phlbrie kcco\",\n//     description: `\"SRGLHVE HEOAIEN ADACEMT\" - Re-arrange the title to identify the cipher. It's not none, inline or flex`,\n//     answer: \"SHARED GOAL ACHIEVEMENT\",\n//     reward: \"292\",\n// },\n// {\n//     code: \"LAST CODE\",\n//     title: \"Team Orange Question #5 - Morse Code :)\",\n//     description: `\"- .... .. ... / .. ... / -. --- - / - .... . / .- -. ... .-- . .-.\" - Well, it's not rocket science - just a few taps of your fingers and the Last Code will unlock the treasure trove. A cinch, really. But don't let that fool you, there's more than meets the eye to this digital labyrinth. `,\n//     answer: \"LAST CODE\",\n//     reward: \"CONGRATULATIONS <3\",\n// },\n// {\n//     code: \"TEST CODE\",\n//     title: \"Default #1 - Introduction :)\",\n//     description: `Welcome to the Scavenger Hunt game! This exciting adventure will take you on a journey to search for hidden clues, solve puzzles, and complete challenges to ultimately uncover the ultimate prize. You'll need to put your detective skills to the test as you explore different locations and piece together the clues to progress through the game. Whether you're playing alone or with a team, get ready for a thrilling and unforgettable experience. Good luck and let the hunt begin!`,\n//     answer: \"TEST\",\n//     reward: \"355\",\n// },\n// ];\n\n  export default questions","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  Row,\n} from \"react-bootstrap\";\n\nimport questions from \"./utils/questions\";\n\nfunction App() {\n  const [code, setCode] = useState(\"\");\n  const [questionId, setQuestionId] = useState(-1);\n  const [answer, setAnswer] = useState(\"\");\n  const [answers, setAnswers] = useState<unknown[]>([]);\n  const [reward, setReward] = useState(\"\");\n  const [screen, setScreen] = useState(\"code\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    let n = 0;\n\n    const timer = setInterval(() => {\n      const isDebugging = Date.now() - n < 500;\n      // debugger;\n      n = Date.now();\n\n      // if (isDebugging) {\n      //   window.location.reload();\n      // }\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const question = questions[questionId];\n\n  const handleSubmitCode = (event: React.FormEvent<HTMLFormElement>) => {\n    setError(\"\");\n    event.preventDefault();\n\n    if (!code) {\n      setError(\"Invalid Code!\");\n      return;\n    }\n\n    const questionId = questions.findIndex(\n      (item) => item.code.toLowerCase() === code.toLowerCase()\n    );\n\n    if (questionId === -1) {\n      setError(\"Invalid Code!\");\n      return;\n    }\n\n    setError(\"\");\n    setQuestionId(questionId);\n    setScreen(\"question\");\n  };\n\n  const handleSubmitQuestion = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setError(\"\");\n\n    if (!question) {\n      reset();\n      setError(\"No question found!\");\n      return;\n    }\n\n    if (!answer) {\n      setError(\"Place your answer\");\n      return;\n    }\n\n    const isCorrect = question.answer.toLowerCase() === answer.toLowerCase();\n\n    if (!isCorrect) {\n      setError(\"Incorrect Answer\");\n      return;\n    }\n\n    setAnswers((prev) => {\n      return [\n        ...prev,\n        { ...question, questionId, isCorrect, time: Date.now() },\n      ];\n    });\n    setError(\"\");\n    setReward(question.reward);\n    setScreen(\"reward\");\n    // Here you would calculate the points based on the answer and set it with setPoints()\n  };\n\n  const reset = () => {\n    setCode(\"\");\n    setQuestionId(-1);\n    setAnswer(\"\");\n    setReward(\"\");\n    setError(\"\");\n    setScreen(\"code\");\n  };\n\n  const handleReset = (event: React.MouseEvent<HTMLButtonElement>) => {\n    reset();\n  };\n\n  const errorMessage = error ? <Alert variant=\"danger\">{error}</Alert> : null;\n\n  return (\n    <Container style={{ marginTop: \"100px\" }}>\n      {screen === \"code\" && (\n        <Row>\n          <Col lg={{ span: 6, offset: 3 }} sm={12}>\n            <Card>\n              <Card.Body>\n                <Card.Title>Code</Card.Title>\n                <Form onSubmit={handleSubmitCode}>\n                  <Form.Group controlId=\"formBasicCode\" className=\"mb-3\">\n                    <Form.Label>Enter code:</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Enter code\"\n                      value={code}\n                      onChange={(event) => {\n                        setCode(event.target.value);\n                        setError(\"\");\n                      }}\n                    />\n                  </Form.Group>\n                  {errorMessage}\n                  <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      )}\n\n      {screen === \"question\" && (\n        <Row>\n          <Col lg={{ span: 6, offset: 3 }} sm={12}>\n            <Card>\n              <Card.Body>\n                <Card.Title>{question.title}</Card.Title>\n                <p>{question.description}</p>\n                <Form onSubmit={handleSubmitQuestion}>\n                  <Form.Group controlId=\"formBasicAnswer\" className=\"mb-3\">\n                    <Form.Label>Answer:</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={3}\n                      placeholder=\"Enter answer\"\n                      value={answer}\n                      onChange={(event) => {\n                        setAnswer(event.target.value);\n                        setError(\"\");\n                      }}\n                    />\n                  </Form.Group>\n                  {errorMessage}\n                  <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      )}\n\n      {screen === \"reward\" && (\n        <Row>\n          <Col lg={{ span: 6, offset: 3 }} sm={12}>\n            <Card>\n              <Card.Body>\n                <Card.Title>Go to:</Card.Title>\n                <p>{reward}</p>\n                <Button variant=\"primary\" type=\"submit\" onClick={handleReset}>\n                  Reset\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}